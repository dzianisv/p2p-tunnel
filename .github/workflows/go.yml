name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    strategy:
      matrix:
        platform:
          - os: linux
            arch: amd64
            ext: ""
          - os: linux
            arch: arm
            ext: ""
          - os: darwin
            arch: amd64
            ext: ""
          - os: windows
            arch: amd64
            ext: .exe

    runs-on: ubuntu-latest
    env:
      GOARCH: ${{matrix.platform.arch}}
      GOOS: ${{matrix.platform.os}}
      NAME: p2p-tunnel
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Fetch tags
      run: |
        git fetch --tags
        echo "::set-env name=GIT_TAG::$(git describe --tags --always)"

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: ${{env.NAME}}-${{env.GOOS}}-${{env.GOARCH}}.zip
        # Directory containing files to upload
        path: ${{env.NAME}}${{matrix.platform.ext}}

    - name: Build Linux packages
      if: env.GOOS == 'linux'
      run: |
        sudo apt update -yq
        sudo apt install -yq gem rpm libarchive-tools
        sudo gem install fpm
        package/linux/make-pkg.sh

    - name: Create release, upload packages
      if: github.ref == 'refs/heads/master' && env.GOOS == 'linux'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.deb, *.rpm, *.pkg.tar.xz"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        tag: ${{ env.GIT_TAG }}
